



# HAProxy 1.7 config for Splash. It assumes Splash instances are executed
# on the same machine and connected to HAProxy using Docker links.
global
    # raise it if necessary
    maxconn 512
    # required for stats page
    stats socket /tmp/haproxy

userlist users
    user user insecure-password userpass

defaults
    log global
    mode http

    # remove requests from a queue when clients disconnect;
    # see https://cbonte.github.io/haproxy-dconv/1.7/configuration.html#4.2-option%20abortonclose
    option abortonclose

    # gzip can save quite a lot of traffic with json, html or base64 data
    compression algo gzip
    compression type text/html text/plain application/json

    # increase these values if you want to
    # allow longer request queues in HAProxy
    timeout connect 300s
    timeout client 300s
    timeout server 300s


# visit 0.0.0.0:8036 to see HAProxy stats page
listen stats
    bind *:8036
    mode http
    stats enable
    stats hide-version
    stats show-legends
    stats show-desc Splash Cluster
    stats uri /
    stats refresh 10s
    stats realm Haproxy\ Statistics
    stats auth    admin:adminpass


# Splash Cluster configuration
frontend http-in
    bind *:8050

    # don't apply the same limits for non-render endpoints
    acl staticfiles path_beg /_harviewer/
    acl misc path / /info /_debug /debug /_ping /_gc

    use_backend splash-cluster
    use_backend splash-cluster-gc
    use_backend splash-misc

backend splash-cluster
    option httpchk GET /_ping
    balance leastconn

    # try another instance when connection is dropped
    retries 2
    option redispatch
    server splash-0 splash0:8050 maxconn 5 inter 10s fall 20 observe layer4
    server splash-1 splash1:8050 maxconn 5 inter 10s fall 20 observe layer4
    server splash-2 splash2:8050 maxconn 5 inter 10s fall 20 observe layer4
    server splash-3 splash3:8050 maxconn 5 inter 10s fall 20 observe layer4
    server splash-4 splash4:8050 maxconn 5 inter 10s fall 20 observe layer4

backend splash-cluster-gc
    option httpchk POST /_gc
    balance leastconn

    # try another instance when connection is dropped
    retries 2
    option redispatch
    server splash-0 splash0:8050 maxconn 5 inter 120s fall 12 observe layer4
    server splash-1 splash1:8050 maxconn 5 inter 120s fall 12 observe layer4
    server splash-2 splash2:8050 maxconn 5 inter 120s fall 12 observe layer4
    server splash-3 splash3:8050 maxconn 5 inter 120s fall 12 observe layer4
    server splash-4 splash4:8050 maxconn 5 inter 120s fall 12 observe layer4

backend splash-misc
    balance roundrobin
    server splash-0 splash0:8050 fall 15
    server splash-1 splash1:8050 fall 15
    server splash-2 splash2:8050 fall 15
    server splash-3 splash3:8050 fall 15
    server splash-4 splash4:8050 fall 15
